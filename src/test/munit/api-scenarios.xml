<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" 
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/validation 
		http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd 
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/http
 		http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit 
		http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  
		http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">

	<munit:config name="api-scenarios.xml" />

    <http:request-config name="HTTP_Request_Configuration">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    
	<munit:test name="api-scenariosTest">
		
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="api-main" />
			<munit:enable-flow-source value="get:\customers:api-config" />
			<munit:enable-flow-source value="get:\customers\(customerId):api-config" />
			<munit:enable-flow-source value="delete:\customers\(customerId):api-config" />
			<munit:enable-flow-source value="post:\customers:application\json:api-config" />
		</munit:enable-flow-sources>

		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;readUrl("classpath://post/set-event_payload.dwl")]' />
			</munit:set-event>
			<set-variable value="#[payload]" doc:name="save payload" variableName="sourcePayload"/>
			<logger level="INFO" doc:name="Logger" message="#[vars.sourcePayload]"/>
		</munit:behavior>

		<munit:execution>

			<logger 
				level="INFO" 
				doc:name="Start" 
				doc:id="2596a9cd-c020-44bd-9e3d-0501a30c6def" 
				message="Customer Main Flow Test - Start"/>

			<logger level="INFO" doc:name="payload" message="#[payload]"/>
			<flow-ref
				doc:name="getCustomer by name"
				name="testGetCustomerByName" />
				
			<choice doc:name="Customer Exist?">
				
				<when expression="payload[0] != null">
				
					<flow-ref
						doc:name="deleteCustomer"
						name="testDeleteCustomer" />
				</when>
			</choice>
			
			<flow-ref
				doc:name="create Customer"
				name="testCreateCustomer" />
			
			<flow-ref
				doc:name="Verify Data"
				name="testVerifyData" />
			
			<logger 
				level="INFO" 
				doc:name="End" 
				message="Customer Main Flow Test - End"/>

		</munit:execution>
	</munit:test>
	
	<!-- *************************************************** -->
	<!-- **** SUB FLOWS                                ***** -->
	<!-- *************************************************** -->	
	<sub-flow name="testGetCustomerByName">
		<set-variable
			value="#[payload.lastName]"
			doc:name="lastName"
			variableName="lastName" />
		<set-variable
			value="#[payload.firstName]"
			doc:name="firstName"
			variableName="firstName" />
		<http:request
			method="GET"
			doc:name="get Customer By FirstName and LastName"
			config-ref="HTTP_Request_Configuration"
			path="/api/customers">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
			<http:query-params><![CDATA[#[output application/java
---
{
	"lastName" : vars.lastName,
	"firstName" : vars.firstName
}]]]></http:query-params>
			<http:response-validator>
				<http:success-status-code-validator values="200" />
			</http:response-validator>
		</http:request>
	</sub-flow>

	<sub-flow name="testVerifyData">
			
		<logger level="INFO" 
			doc:name="Logger" 
			message='#["Testing new resource, customerId=" ++ vars.customerId]' />
			
		<http:request
			method="GET"
			doc:name="get resource by id"
			config-ref="HTTP_Request_Configuration"
			path='#["/api/customers/" ++ vars.customerId]'>
			<http:uri-params><![CDATA[#[output application/java
---
{
	"customerId" : vars.customerId
}]]]></http:uri-params>
		</http:request>
		
		<logger level="INFO" 
			doc:name="end" 
			message='#["Testing new resource, customerId=" ++ vars.customerId]'/>
		
	</sub-flow>

	<sub-flow name="testDeleteCustomer">
		
		<logger 
			level="INFO" 
			doc:name="delete" 
			message='Customer exist on database, delete it' />
		
		<set-variable
			value="#[payload[0].customerId]"
			doc:name="customerId"
			doc:id="b92bd33f-e60e-4ad9-95b4-34e1993f2f5d"
			variableName="customerId" />
		
		<logger level="INFO" 
			doc:name="customerId" 
			message='#["To delete customerId: " ++ vars.customerId]' />	
			
		<http:request
			method="DELETE"
			doc:name="DELETE"
			config-ref="HTTP_Request_Configuration"
			path="/api/customers/{customerId}">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
			<http:uri-params><![CDATA[#[output application/java
---
{
	"customerId" : vars.customerId
}]]]></http:uri-params>
			<http:response-validator>
				<http:success-status-code-validator values="200" />
			</http:response-validator>
		</http:request>
		<validation:is-true
			doc:name="status deleted?"
			doc:id="7e5fbbc1-f00a-4ea1-bede-fb7dba6b5a2f"
			config-ref="Validation_Config"
			expression="#[attributes.statusCode == 200]" />
	</sub-flow>
	
	
	<sub-flow
		name="testCreateCustomer"
		doc:id="7e396587-a705-412e-8ac7-20de099d7794">
		<logger level="INFO" doc:name="create" message="Create Customer" />
		
		<set-payload
			value="#[vars.sourcePayload]"
			doc:name="payload"/>	

		<http:request
			method="POST"
			doc:name="POST"
			config-ref="HTTP_Request_Configuration"
			path="/api/customers">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
			<http:response-validator>
				<http:success-status-code-validator values="201,409" />
			</http:response-validator>
		</http:request>

		<validation:is-true
			doc:name="status Created?"
			config-ref="Validation_Config"
			expression="#[attributes.statusCode == 201]" />

		<ee:transform doc:name="get customerId" >
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="customerId"><![CDATA[%dw 2.0
import dw::core::Strings
var location = attributes.headers.location
---
if (location != null ) 
    (location Strings::substringAfterLast "/")
else null
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		
		<logger 
			level="INFO" 
			doc:name="new customerId" 
			message='#["New customerId: " ++ vars.customerId]' />
			
		<set-payload
			value="#[vars.sourcePayload]"
			doc:name="payload" />

		<http:request
			method="POST"
			doc:name="POST - Retry again"
			config-ref="HTTP_Request_Configuration"
			path="/api/customers">
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
			<http:response-validator>
				<http:success-status-code-validator values="201,409" />
			</http:response-validator>
		</http:request>
		
		<validation:is-true
			doc:name="status duplicated?"
			config-ref="Validation_Config"
			expression="#[attributes.statusCode == 409]" />
		
		<logger 
			level="INFO" 
			doc:name="Customer Duplicated" 
			message='The Customer is already present in the database' />
			
	</sub-flow>
</mule>
