<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:opentelemetry="http://www.mulesoft.org/schema/mule/opentelemetry"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/salesforce 
		http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
		http://www.mulesoft.org/schema/mule/opentelemetry 
		http://www.mulesoft.org/schema/mule/opentelemetry/current/mule-opentelemetry.xsd">
	
	
	<flow name="queryCustomer" >
		<ee:transform doc:name="Where Filter" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="soqlFilter" ><![CDATA[%dw 2.0
import modules::soql

var sqlFilter1 = soql::soqlBuilder("", "AND",
        soql::stringParameter("firstName__c", vars.firstName))
var sqlFilter2 = soql::soqlBuilder(sqlFilter1, "AND",
        soql::stringParameter("lastName__c", vars.lastName))
var sqlFilter3 = soql::soqlBuilder(sqlFilter2, "AND",
        soql::stringParameter("Id", vars.customerId))
output application/json
---
sqlFilter3	]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:query 
			doc:name="Customer" 
			config-ref="GlobalSalesforceConfig">
			
			<salesforce:salesforce-query ><![CDATA[SELECT firstName__c, lastName__c, address__c, Id 
FROM Customer__c 
 :soqlFilter]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	soqlFilter : vars.soqlFilter
}]]]></salesforce:parameters>
		</salesforce:query>

		<logger 
			level="DEBUG" 
			doc:name="Logger"
			category="app" 
			message="#[${file::script-records-found.dwl}]"/>
			
		<ee:transform doc:name="Customer Payload">
			<ee:message >
				<ee:set-payload ><![CDATA[${file::script-records-from-payload.dwl}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
		<error-handler ref="global-error-handler" />
	</flow>
	
	
	<flow name="getByName"  >
		<logger 
			level="INFO" 
			doc:name="Logger" 
			message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	message: "Customer getByName",&#10;    firstName: attributes.queryParams.firstName default "",&#10;	lastName: attributes.queryParams.lastName default ""  &#10;}]' category="app"/>
		<set-variable 
			value='#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;    "firstName": attributes.queryParams.firstName default "",&#10;    "lastName": attributes.queryParams.lastName default ""&#10;}]'
			doc:name="otel Tags" 
			variableName="openTelemetryTags"/>
		<set-variable 
			value="#[attributes.queryParams.firstName]" 
			doc:name="firstName" 
			variableName="firstName"/>
		<set-variable 
			value="#[attributes.queryParams.lastName]" 
			doc:name="lastName" 
			variableName="lastName"/>
		<flow-ref doc:name="queryCustomer" name="queryCustomer"/>
	</flow>


	<flow name="getById">
		<logger 
			level="INFO" 
			doc:name="Logger" 
			message="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	message: &quot;Customer  getById&quot;,&#10;    customerId: attributes.uriParams.'customerId' default &quot;&quot;&#10;}]" 
			category="app"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;    &quot;customerId&quot;: attributes.uriParams.'customerId' default &quot;&quot;,&#10;}]" doc:name="otel Tags" doc:id="ef1ab554-583b-4be2-9985-72155fba1629" variableName="openTelemetryTags" />
		<ee:transform doc:name="get customerId" >
			<ee:variables >
				<ee:set-variable 
					variableName="customerId" ><![CDATA[attributes.uriParams.'customerId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref 
			doc:name="queryCustomer" 
			name="queryCustomer"/>
		<ee:transform doc:name="get Customer" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
if (payload[0] == null) "" else payload[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
